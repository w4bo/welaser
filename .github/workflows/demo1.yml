name: "Demo1"
on:
  push:
    paths:
      - 'demo1-term-camera-dashboard/**'
      - '.github/workflows/demo1.yml'
jobs:
  launch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Images
        run: |
          cd demo1-term-camera-dashboard
          cp .env.example .env
          sed -i 's/127.0.0.1/'$(hostname)'/g' .env
          ./build.sh
      - name: Launch
        run: |
          cd demo1-term-camera-dashboard
          cp .env.example .env
          sed -i 's/127.0.0.1/'$(hostname)'/g' .env
          ./launch.sh 1 1
      - name: Verify
        run: |
          cd demo1-term-camera-dashboard
          cp .env.example .env
          sed -i 's/127.0.0.1/'$(hostname)'/g' .env
          sleep 20s
          docker ps | wc -l
          if [ $(docker ps | wc -l) != "9" ]
          then
            exit 1
          fi
          ./stop.sh
          if [ $(docker ps | wc -l) != "1" ]
          then
            exit 1
          fi

  entities:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: therm and camera
        run: |
          cd demo1-term-camera-dashboard
          cp .env.example .env
          sed -i 's/127.0.0.1/'$(hostname)'/g' .env
          ./build.sh
          ./launch.sh 1 1
          sleep 1m
      - name: 'therm1 exists'
        uses: actionsflow/axios@v1
        with:
          url: http://localhost:8082/v2/entities/urn:ngsi-ld:thermometer:1
          method: 'GET'
          accept: 200
          headers: '{ "fiware-service": "openiot", "fiware-servicepath": "/" }'
          content-type: application/json
          timeout: 10000
          # If it is set to true, it will show the response log in the Github UI
          # Default: false
          is_debug: true
      - name: 'camera1 exists'
        uses: actionsflow/axios@v1
        with:
          url: http://localhost:8082/v2/entities/urn:ngsi-ld:thermometer:1
          method: 'GET'
          accept: 200
          headers: '{ "fiware-service": "openiot", "fiware-servicepath": "/" }'
          content-type: application/json
          timeout: 10000
          # If it is set to true, it will show the response log in the Github UI
          # Default: false
          is_debug: true
      - name: 'term1 compliant'
        run: |
          cd demo1-term-camera-dashboard/tests
          python3 testCam1.py
      - name: 'camera1 compliant'
        run: |
          cd demo1-term-camera-dashboard/tests
          python3 testCam1.py
      - name: 'dashboard accessible'
        uses: actionsflow/axios@v1
        with:
          url: http://localhost:8080
          method: 'GET'
          accept: 200
          content-type: application/json
          timeout: 10000
          # If it is set to true, it will show the response log in the Github UI
          # Default: false
          is_debug: true

  commands-webserver:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: launch
        run: |
          cd demo1-term-camera-dashboard
          cp .env.example .env
          sed -i 's/127.0.0.1/'$(hostname)'/g' .env
          cp mosquitto/pwfile.example mosquitto/pwfile
          ./build.sh
          ./launch.sh 1 0
          sleep 1m
      - name: 'therm1 exists'
        uses: actionsflow/axios@v1
        with:
          url: http://localhost:8082/v2/entities/urn:ngsi-ld:thermometer:1
          method: 'GET'
          accept: 200
          headers: '{ "fiware-service": "openiot", "fiware-servicepath": "/" }'
          content-type: application/json
          timeout: 10000
          # If it is set to true, it will show the response log in the Github UI
          # Default: false
          is_debug: true
      - name: 'execute webserver'
        run: |
          cd demo1-term-camera-dashboard/tests
          python3 term1OnWebserver.py
